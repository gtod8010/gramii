// Generated by view binder compiler. Do not edit!
package com.gramii.smsforwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.gramii.smsforwarder.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText apiTokenEditText;

  @NonNull
  public final TextInputLayout apiTokenLayout;

  @NonNull
  public final TextInputEditText apiUrlEditText;

  @NonNull
  public final TextInputLayout apiUrlLayout;

  @NonNull
  public final TextView logTextView;

  @NonNull
  public final Button permissionButton;

  @NonNull
  public final TextView statusTitleTextView;

  @NonNull
  public final TextView titleTextView;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText apiTokenEditText, @NonNull TextInputLayout apiTokenLayout,
      @NonNull TextInputEditText apiUrlEditText, @NonNull TextInputLayout apiUrlLayout,
      @NonNull TextView logTextView, @NonNull Button permissionButton,
      @NonNull TextView statusTitleTextView, @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.apiTokenEditText = apiTokenEditText;
    this.apiTokenLayout = apiTokenLayout;
    this.apiUrlEditText = apiUrlEditText;
    this.apiUrlLayout = apiUrlLayout;
    this.logTextView = logTextView;
    this.permissionButton = permissionButton;
    this.statusTitleTextView = statusTitleTextView;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.apiTokenEditText;
      TextInputEditText apiTokenEditText = ViewBindings.findChildViewById(rootView, id);
      if (apiTokenEditText == null) {
        break missingId;
      }

      id = R.id.apiTokenLayout;
      TextInputLayout apiTokenLayout = ViewBindings.findChildViewById(rootView, id);
      if (apiTokenLayout == null) {
        break missingId;
      }

      id = R.id.apiUrlEditText;
      TextInputEditText apiUrlEditText = ViewBindings.findChildViewById(rootView, id);
      if (apiUrlEditText == null) {
        break missingId;
      }

      id = R.id.apiUrlLayout;
      TextInputLayout apiUrlLayout = ViewBindings.findChildViewById(rootView, id);
      if (apiUrlLayout == null) {
        break missingId;
      }

      id = R.id.logTextView;
      TextView logTextView = ViewBindings.findChildViewById(rootView, id);
      if (logTextView == null) {
        break missingId;
      }

      id = R.id.permissionButton;
      Button permissionButton = ViewBindings.findChildViewById(rootView, id);
      if (permissionButton == null) {
        break missingId;
      }

      id = R.id.statusTitleTextView;
      TextView statusTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTitleTextView == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, apiTokenEditText, apiTokenLayout,
          apiUrlEditText, apiUrlLayout, logTextView, permissionButton, statusTitleTextView,
          titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
